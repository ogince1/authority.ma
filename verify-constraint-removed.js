import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';

dotenv.config({ path: '.env.local' });

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
const supabase = createClient(supabaseUrl, supabaseServiceKey);

console.log('üîç V√âRIFICATION - Migration appliqu√©e ?');
console.log('='.repeat(80));

async function verifyConstraintRemoved() {
  try {
    console.log('\nüìä 1. Test de cr√©ation de demande pour golftradition.fr...');
    console.log('-'.repeat(80));

    // R√©cup√©rer les donn√©es n√©cessaires
    const { data: advertiser } = await supabase
      .from('users')
      .select('id, email, name')
      .eq('email', 'abderrahimmolatefpro@gmail.com')
      .single();

    const { data: golfSite } = await supabase
      .from('websites')
      .select('id, title, user_id, new_article_price')
      .ilike('url', '%golftradition%')
      .single();

    console.log(`‚úÖ Annonceur: ${advertiser.name} (${advertiser.email})`);
    console.log(`‚úÖ Site: ${golfSite.title}`);
    console.log(`‚úÖ Prix: ${golfSite.new_article_price} MAD`);

    // Test : Cr√©er une demande avec website_id comme link_listing_id
    console.log('\nüß™ TEST: Cr√©er demande avec website_id...');
    
    const requestData = {
      link_listing_id: golfSite.id,  // website_id
      user_id: advertiser.id,
      publisher_id: golfSite.user_id,
      target_url: 'https://test-verification-constraint.com',
      anchor_text: 'Test apr√®s suppression contrainte',
      proposed_price: golfSite.new_article_price,
      proposed_duration: 1,
      content_option: 'platform'
    };

    console.log(`\n   link_listing_id utilis√©: ${requestData.link_listing_id}`);
    console.log(`   Type: website_id (pas dans link_listings)`);

    const { data: purchaseRequest, error: requestError } = await supabase
      .from('link_purchase_requests')
      .insert([requestData])
      .select()
      .single();

    if (requestError) {
      console.log('\n‚ùå √âCHEC DE LA V√âRIFICATION:');
      console.log(`   Code: ${requestError.code}`);
      console.log(`   Message: ${requestError.message}`);
      
      if (requestError.code === '23503') {
        console.log('\n‚ö†Ô∏è  LA CONTRAINTE N\'A PAS √âT√â SUPPRIM√âE !');
        console.log('   La migration n\'a pas fonctionn√©.');
        console.log('\nüìù R√©essayez dans Supabase Dashboard:');
        console.log('   1. SQL Editor');
        console.log('   2. Coller: ALTER TABLE link_purchase_requests DROP CONSTRAINT IF EXISTS link_purchase_requests_link_listing_id_fkey;');
        console.log('   3. RUN');
      }
      
      return false;
    }

    console.log('\n‚úÖ SUCC√àS ! LA MIGRATION A FONCTIONN√â !');
    console.log(`   Demande cr√©√©e: ${purchaseRequest.id}`);
    console.log(`   Status: ${purchaseRequest.status}`);
    console.log(`   link_listing_id: ${purchaseRequest.link_listing_id} (website_id accept√©)`);

    // 2. V√©rifier que la demande est bien lisible
    console.log('\nüìñ 2. V√©rification lecture de la demande...');
    
    const { data: readRequest, error: readError } = await supabase
      .from('link_purchase_requests')
      .select(`
        id,
        link_listing_id,
        status,
        anchor_text,
        link_listing:link_listings(id, title)
      `)
      .eq('id', purchaseRequest.id)
      .single();

    if (readError) {
      console.log('‚ùå Erreur lecture:', readError.message);
    } else {
      console.log('‚úÖ Demande lisible');
      console.log(`   link_listing jointure: ${readRequest.link_listing ? 'Trouv√©' : 'NULL (normal pour nouveau article)'}`);
    }

    // 3. Nettoyage
    console.log('\nüßπ 3. Nettoyage de la demande de test...');
    
    const { error: deleteError } = await supabase
      .from('link_purchase_requests')
      .delete()
      .eq('id', purchaseRequest.id);

    if (deleteError) {
      console.log('‚ö†Ô∏è  Erreur nettoyage:', deleteError.message);
    } else {
      console.log('‚úÖ Demande de test supprim√©e');
    }

    // 4. Conclusion finale
    console.log('\n' + '='.repeat(80));
    console.log('üéâ V√âRIFICATION TERMIN√âE AVEC SUCC√àS');
    console.log('='.repeat(80));
    console.log('\n‚úÖ La contrainte a bien √©t√© supprim√©e');
    console.log('‚úÖ golftradition.fr peut maintenant √™tre command√©');
    console.log('‚úÖ Tous les futurs sites fonctionneront');
    console.log('\nüí° PROCHAINE √âTAPE:');
    console.log('   Testez dans le navigateur: http://localhost:5175/panier');
    console.log('   Ajoutez golftradition.fr et validez la commande');

    return true;

  } catch (error) {
    console.error('\n‚ùå Erreur:', error);
    return false;
  }
}

verifyConstraintRemoved();
