#!/bin/bash

# Script pour nettoyer Supabase local et rÃ©cupÃ©rer les donnÃ©es du cloud
echo "ðŸ§¹ Nettoyage complet de Supabase local et synchronisation avec le cloud"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Ã‰tape 1: ArrÃªter Supabase
print_status "ArrÃªt de Supabase local..."
supabase stop 2>/dev/null || true
print_success "Supabase arrÃªtÃ©"

# Ã‰tape 2: Supprimer les conteneurs Supabase
print_status "Suppression des conteneurs Supabase..."
docker rm -f supabase_db_platformelink 2>/dev/null || true
docker rm -f supabase_api_platformelink 2>/dev/null || true
docker rm -f supabase_studio_platformelink 2>/dev/null || true
docker rm -f supabase_realtime_platformelink 2>/dev/null || true
docker rm -f supabase_storage_platformelink 2>/dev/null || true
docker rm -f supabase_inbucket_platformelink 2>/dev/null || true
print_success "Conteneurs supprimÃ©s"

# Ã‰tape 3: Supprimer les volumes Supabase
print_status "Suppression des volumes Supabase..."
docker volume rm supabase_db_platformelink 2>/dev/null || true
docker volume rm supabase_storage_platformelink 2>/dev/null || true
print_success "Volumes supprimÃ©s"

# Ã‰tape 4: Nettoyer Docker
print_status "Nettoyage de Docker..."
docker system prune -f 2>/dev/null || true
print_success "Docker nettoyÃ©"

# Ã‰tape 5: Supprimer les migrations problÃ©matiques
print_status "Suppression des migrations problÃ©matiques..."
rm -f supabase/migrations/20250121000006_fix_payment_system.sql
rm -f supabase/migrations/20250121000007_fix_purchase_requests.sql
rm -f supabase/migrations/20250121000016_fix_rls_duplicates.sql
print_success "Migrations problÃ©matiques supprimÃ©es"

# Ã‰tape 6: Demander le Project ID
echo ""
print_status "Configuration de la synchronisation avec le cloud"
echo ""

# Demander le Project ID
read -p "Entrez votre Project ID Supabase cloud: " PROJECT_ID

if [ -z "$PROJECT_ID" ]; then
    print_error "Project ID requis pour continuer"
    exit 1
fi

# Ã‰tape 7: Lier le projet cloud
print_status "Liaison avec le projet cloud: $PROJECT_ID"
supabase link --project-ref "$PROJECT_ID" 2>/dev/null || {
    print_error "Impossible de lier le projet. VÃ©rifiez votre Project ID."
    exit 1
}
print_success "Projet liÃ© avec succÃ¨s"

# Ã‰tape 8: RÃ©cupÃ©rer le schÃ©ma du cloud
print_status "RÃ©cupÃ©ration du schÃ©ma depuis le cloud..."
supabase db pull 2>/dev/null || {
    print_error "Impossible de rÃ©cupÃ©rer le schÃ©ma du cloud"
    exit 1
}
print_success "SchÃ©ma rÃ©cupÃ©rÃ© avec succÃ¨s"

# Ã‰tape 9: DÃ©marrer Supabase avec le nouveau schÃ©ma
print_status "DÃ©marrage de Supabase avec le schÃ©ma cloud..."
supabase start 2>/dev/null || {
    print_error "Impossible de dÃ©marrer Supabase"
    exit 1
}
print_success "Supabase dÃ©marrÃ© avec succÃ¨s"

# Ã‰tape 10: VÃ©rification finale
print_status "VÃ©rification de la synchronisation..."
supabase status 2>/dev/null || {
    print_warning "Impossible de vÃ©rifier le statut"
}

echo ""
print_success "ðŸŽ‰ Synchronisation terminÃ©e avec succÃ¨s !"
echo ""
echo "ðŸ“‹ Services disponibles :"
echo "   â€¢ Supabase Studio: http://127.0.0.1:54323"
echo "   â€¢ API REST: http://127.0.0.1:54321"
echo "   â€¢ Base de donnÃ©es: postgresql://postgres:postgres@127.0.0.1:54322/postgres"
echo ""
echo "ðŸ”— Ouvrez votre navigateur et allez Ã : http://127.0.0.1:54323"
echo "" 