// Script pour d√©boguer le probl√®me de l'√©diteur
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://lqldqgbpaxqaazfjzlsz.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxxbGRxZ2JwYXhxYWF6Zmp6bHN6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzU2NDE5MSwiZXhwIjoyMDY5MTQwMTkxfQ.rVOMDNv6DVaAq3202AcAacXaM2-hGqppyeI617eWieI';

const supabase = createClient(supabaseUrl, supabaseKey);

const publisherId = '187fba7a-38bf-4280-a069-656240b1c630';

console.log('üîç D√©bogage du probl√®me de l\'√©diteur...\n');

async function debugPublisherIssue() {
  try {
    // 1. V√©rifier si l'√©diteur existe
    console.log('1Ô∏è‚É£ V√©rification de l\'existence de l\'√©diteur...');
    
    const { data: publisher, error: publisherError } = await supabase
      .from('users')
      .select('*')
      .eq('id', publisherId)
      .maybeSingle();
    
    if (publisherError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration de l\'√©diteur:', publisherError);
      return;
    }
    
    if (!publisher) {
      console.log('‚ùå √âditeur non trouv√© avec l\'ID:', publisherId);
      
      // Chercher des utilisateurs similaires
      console.log('\nüîç Recherche d\'utilisateurs similaires...');
      const { data: similarUsers, error: similarError } = await supabase
        .from('users')
        .select('id, email, full_name, role')
        .limit(10);
      
      if (similarError) {
        console.error('‚ùå Erreur lors de la recherche:', similarError);
      } else {
        console.log('üìã Utilisateurs trouv√©s:');
        similarUsers.forEach((user, index) => {
          console.log(`   ${index + 1}. ID: ${user.id}`);
          console.log(`      Email: ${user.email}`);
          console.log(`      Nom: ${user.full_name || 'N/A'}`);
          console.log(`      Role: ${user.role}`);
          console.log('');
        });
      }
      return;
    }
    
    console.log('‚úÖ √âditeur trouv√©:');
    console.log(`   ID: ${publisher.id}`);
    console.log(`   Email: ${publisher.email}`);
    console.log(`   Nom: ${publisher.full_name || 'N/A'}`);
    console.log(`   Role: ${publisher.role}`);
    console.log(`   Solde: ${publisher.balance} MAD`);
    
    // 2. V√©rifier les demandes avec cet √©diteur
    console.log('\n2Ô∏è‚É£ V√©rification des demandes avec cet √©diteur...');
    
    const { data: requests, error: requestsError } = await supabase
      .from('link_purchase_requests')
      .select(`
        id,
        status,
        proposed_price,
        created_at,
        link_listings!inner(title)
      `)
      .eq('publisher_id', publisherId)
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (requestsError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration des demandes:', requestsError);
    } else {
      console.log(`üìã ${requests.length} demande(s) trouv√©e(s) pour cet √©diteur:`);
      requests.forEach((request, index) => {
        console.log(`   ${index + 1}. ID: ${request.id}`);
        console.log(`      Status: ${request.status}`);
        console.log(`      Prix: ${request.proposed_price} MAD`);
        console.log(`      Titre: ${request.link_listings?.title}`);
        console.log(`      Cr√©√©: ${request.created_at}`);
        console.log('');
      });
    }
    
    // 3. Tester la requ√™te qui pose probl√®me
    console.log('\n3Ô∏è‚É£ Test de la requ√™te probl√©matique...');
    
    const { data: balanceData, error: balanceError } = await supabase
      .from('users')
      .select('balance')
      .eq('id', publisherId)
      .maybeSingle();
    
    if (balanceError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration du solde:', balanceError);
    } else if (!balanceData) {
      console.log('‚ùå Aucune donn√©e de solde trouv√©e');
    } else {
      console.log('‚úÖ Solde r√©cup√©r√© avec succ√®s:', balanceData.balance, 'MAD');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur dans debugPublisherIssue:', error);
  }
}

// Fonction principale
async function runDebug() {
  console.log('üöÄ D√©marrage du d√©bogage...\n');
  
  await debugPublisherIssue();
  
  console.log('\n‚úÖ D√©bogage termin√© !');
}

// Ex√©cuter le d√©bogage
runDebug().catch(console.error);
